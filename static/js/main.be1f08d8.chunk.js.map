{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","label","required","value","onChange","pattern","useState","Math","random","toString","slice","id","isUrl","touched","setToched","hasError","test","htmlFor","classNames","type","placeholder","event","currentValue","target","trim","onBlur","NewMovie","onAdd","emptyMovie","count","setCount","isError","setError","newMovie","setNewMovie","useEffect","field","prevMovie","onSubmit","preventDefault","prevCount","disabled","App","moviesFromServer","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be1f08d8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  label?: string,\n  required?: boolean,\n  value: string,\n  onChange: (field: string, value: string) => void,\n  pattern?: RegExp,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  label = name,\n  required = false,\n  value,\n  onChange,\n  pattern,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const isUrl = name === 'imdbUrl' || name === 'imgUrl';\n\n  const [touched, setToched] = useState(false);\n  const hasError = isUrl && pattern\n    ? touched && required && !pattern.test(value)\n    : touched && required && (value === '');\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          onChange={event => {\n            const currentValue = event.target.value.trim();\n\n            onChange(name, currentValue);\n          }}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {(hasError) && (\n        <p className=\"help is-danger\">{`${label} is incorrect`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const emptyMovie: Movie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  const [count, setCount] = useState(0);\n  const [isError, setError] = useState(true);\n  const [newMovie, setNewMovie] = useState(emptyMovie);\n\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  useEffect(() => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = newMovie;\n\n    if (title.trim()\n      && pattern.test(imgUrl)\n      && pattern.test(imdbUrl)\n      && imdbId) {\n      setError(false);\n    } else {\n      setError(true);\n    }\n  }, [newMovie]);\n\n  const onChange = (field: string, value: string) => {\n    setNewMovie((prevMovie) => ({\n      ...prevMovie,\n      [field]: value,\n    }));\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    onAdd(newMovie);\n    setCount((prevCount: number) => prevCount + 1);\n\n    setNewMovie(emptyMovie);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={onChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={onChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={onChange}\n        pattern={pattern}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={onChange}\n        pattern={pattern}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={onChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isError}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const onAdd = (movie: Movie) => {\n    setMovies((prevMovies) => [...prevMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}